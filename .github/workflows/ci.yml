name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - core
          - ui-react

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Clean Yarn cache
        run: yarn cache clean

      - name: Increase memory limit
        run: export NODE_OPTIONS=--max_old_space_size=4096

      - name: Install dependencies
        run: yarn install --network-concurrency 1

      - name: Lint ${{ matrix.project }}
        run: yarn nx run ${{ matrix.project }}:lint
      
      - name: Test ${{ matrix.project }}
        run: yarn nx run ${{ matrix.project }}:test --coverage --coverageReporters=lcov
      
      - name: Build ${{ matrix.project }}
        run: yarn nx run ${{ matrix.project }}:build

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage-reports
          path: coverage/

      - name: Merge coverage reports
        run: node coverageMerger.js

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}